import Visit from "../models/Visit.js";
import Business from "../models/Bussiness.js";
import Review from "../models/Review.js"; // ðŸ‘ˆ Review Model Import kiya gaya

// ðŸ‘‰ Record a new visit
export const createVisit = async (req, res) => {
Â  try {
Â  Â  const userId = req.user._id; // authMiddleware se aayega
Â  Â  const { businessId } = req.body;

Â  Â  if (!businessId) {
Â  Â  Â  return res.status(400).json({ message: "businessId required" });
Â  Â  }

Â  Â  // check business exists
Â  Â  const business = await Business.findById(businessId);
Â  Â  if (!business) {
Â  Â  Â  return res.status(404).json({ message: "Business not found" });
Â  Â  }

Â  Â  const visit = new Visit({ user: userId, business: businessId });
Â  Â  await visit.save();

Â  Â  res.status(201).json({ message: "Visit recorded successfully", visit });
Â  } catch (err) {
Â  Â  console.error("Error recording visit:", err);
Â  Â  res.status(500).json({ message: "Server error" });
Â  }
};

// ---


export const getTrendingBusinesses = async (req, res) => {
Â  try {
Â  Â  const lastWeek = new Date();
Â  Â  lastWeek.setDate(lastWeek.getDate() - 7);

Â  Â  const trending = await Visit.aggregate([
Â  Â  Â  // 1. Last 7 days visits match
Â  Â  Â  { $match: { createdAt: { $gte: lastWeek } } },
Â  Â  Â  
Â  Â  Â  // 2. Group by business and count visits
Â  Â  Â  {
Â  Â  Â  Â  $group: {
Â  Â  Â  Â  Â  _id: "$business",
Â  Â  Â  Â  Â  visitCount: { $sum: 1 },
Â  Â  Â  Â  },
Â  Â  Â  },
Â  Â  Â  // 3. Sort and Limit
Â  Â  Â  { $sort: { visitCount: -1 } },
Â  Â  Â  { $limit: 10 },
Â  Â  Â  
Â  Â  Â  // 4. Business data ko jodna
Â  Â  Â  {
Â  Â  Â  Â  $lookup: {
Â  Â  Â  Â  Â  from: "businesses",
Â  Â  Â  Â  Â  localField: "_id",
Â  Â  Â  Â  Â  foreignField: "_id",
Â  Â  Â  Â  Â  as: "business",
Â  Â  Â  Â  },
Â  Â  Â  },
Â  Â  Â  { $unwind: "$business" },
Â  Â  Â  
Â  Â  Â  // 5. Reviews data ko jodna (Reviews collection ka naam 'reviews' hota hai)
Â  Â  Â  {
Â  Â  Â  Â  $lookup: {
Â  Â  Â  Â  Â  from: "reviews", // Review collection ka naam
Â  Â  Â  Â  Â  localField: "_id",
Â  Â  Â  Â  Â  foreignField: "business",
Â  Â  Â  Â  Â  as: "reviews",
Â  Â  Â  Â  },
Â  Â  Â  },

Â  Â  Â  // 6. Average Rating aur Review Count ki ganna karna
Â  Â  Â  {
Â  Â  Â  Â  $addFields: {
Â  Â  Â  Â  Â  averageRating: { $avg: "$reviews.rating" }, // Reviews array ki ratings ka average
Â  Â  Â  Â  Â  reviewCount: { $size: "$reviews" }, // Reviews array ka size
Â  Â  Â  Â  },
Â  Â  Â  },

Â  Â  Â  // 7. Final Output Format
Â  Â  Â  {
Â  Â  Â  Â  $project: {
Â  Â  Â  Â  Â  _id: 0,
Â  Â  Â  Â  Â  businessId: "$business._id",
Â  Â  Â  Â  Â  name: "$business.name",
Â  Â  Â  Â  Â  category: "$business.category",
Â  Â  Â  Â  Â  location: "$business.location",
Â  Â  Â  Â  Â  images: "$business.images", 
Â  Â  Â  Â  Â  visitCount: 1,
Â  Â  Â  Â  Â  averageRating: 1, // ðŸ‘ˆ New Field
Â  Â  Â  Â  Â  reviewCount: 1, // ðŸ‘ˆ New Field
Â  Â  Â  Â  Â  reviews: 0, // Reviews array ko response se hata diya
Â  Â  Â  Â  },
Â  Â  Â  },
Â  Â  ]);

Â  Â  res.json(trending);
Â  } catch (err) {
Â  Â  console.error("Error fetching trending businesses:", err);
Â  Â  res.status(500).json({ message: "Server error" });
Â  }
};